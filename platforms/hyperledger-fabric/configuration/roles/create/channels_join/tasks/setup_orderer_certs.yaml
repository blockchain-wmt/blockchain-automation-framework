#############################################################################################
# This role fetch orderer certificates for organisations.
#############################################################################################

# Check orderer-certificate file exists
- name: Check that orderer-certificate file exists
  stat:
    path: "{{ orderer.certificate }}"
  loop: "{{ network.orderers }}"
  loop_control:
    loop_var: orderer
  register: orderer_file_result
  failed_when: add_new_org == 'true' and not orderer_file_result.stat.exists # Fail the task if new_org is added and orderer-cert does not exist
  tags:
    - notest

# Ensure orderer-cert directory is present
- name: Ensure orderer tls cert directory exists
  file:
    path: "./build/crypto-config/ordererOrganizations/{{ orderer.org_name|lower }}-net/orderers/{{orderer.name}}.{{ orderer.org_name|lower }}-net/tls"
    state: directory
  loop: "{{ network.orderers }}"
  loop_control:
    loop_var: orderer
  when: add_new_org == 'false'
  tags:
    - notest

# This task create the orderer certificate directories if it is not present 
- name: Create the orderer certificate directory if it does not exist
  file:
    path: "{{ orderer.certificate | dirname }}"
    state: directory
  loop: "{{ network.orderers }}"
  loop_control:
    loop_var: orderer
  when: add_new_org == 'false' and add_peer is not defined

# This task generate the ca.crt file if it is not present
- name: Create the ca.crt for orderers if it is not present
  file:
    path: "{{ orderer.certificate }}"
    state: touch
  loop: "{{ network.orderers }}"
  loop_control:
    loop_var: orderer
  when: add_new_org == 'false' and add_peer is not defined
  tags:
    - molecule-idempotence-notest


     
# Copy the ca.crt when add_new_org is false 
- name: Copy tls ca.crt from auto-generated path to given path
  copy:
    src: "./build/crypto-config/ordererOrganizations/{{ orderer.org_name|lower }}-net/orderers/{{orderer.name}}.{{ orderer.org_name|lower }}-net/tls/ca.crt"
    dest: "{{ orderer.certificate }}"
    follow: no
    force: yes
  loop: "{{ network.orderers }}"
  loop_control:
    loop_var: orderer
  when: 
  - add_new_org == 'false' and add_peer is not defined 
  - org.services.ca.tls_ca is undefined
  tags:
    - notest

# Copy the ca.crt when add_new_org is false 
- name: Copy tls ca.crt from auto-generated path to given path when external tls is used
  copy:
    src: "./build/crypto-config/tls/ordererOrganizations/{{ orderer.org_name|lower }}-net/orderers/{{orderer.name}}.{{ orderer.org_name|lower }}-net/tls/ca.crt"
    dest: "{{ orderer.certificate }}"
    follow: no
    force: yes
  loop: "{{ network.orderers }}"
  loop_control:
    loop_var: orderer
  when: 
  - add_new_org == 'false' and add_peer is not defined
  - org.services.ca.tls_ca is defined
  tags:
    - notest

# Check if Orderer certs exists in vault. If yes, get the certificate
- name: Check if Orderer certs exist in Vault
  shell: |
    vault kv get -field=ca.crt {{ vault.secret_path | default('secret') }}/crypto/peerOrganizations/{{ component_name }}/orderer/tls
  environment:
    VAULT_ADDR: "{{ org.vault.url }}"
    VAULT_TOKEN: "{{ org.vault.root_token }}"
  loop: "{{ network.orderers }}"
  loop_control:
    loop_var: orderer
  register: orderer_certs_result
  ignore_errors: yes
  changed_when: false
  tags:
    - notest

- name: Save Orderer certs if not in Vault
  local_action: copy content="{{ orderer_certs_result.results[0].stdout }}" dest="{{ orderer.certificate }}"
  loop: "{{ network.orderers }}"
  loop_control:
    loop_var: orderer
  when: orderer_certs_result.results[0].failed == False
  tags:
    - notest

- name: Copy organization level certificates for orderers
  shell: |
    {% for orderer in orderers %}
    vault write {{ vault.secret_path | default('secret') }}/crypto/peerOrganizations/{{ component_name }}/orderer/tls ca.crt="$(cat {{ orderer.certificate }})" 
    {% endfor %}
  vars:
    orderers: "{{ network.orderers }}"
  environment:
    VAULT_ADDR: "{{ org.vault.url }}"
    VAULT_TOKEN: "{{ org.vault.root_token }}"
  when: orderer_certs_result.results[0].failed == True
  tags:
    - notest
