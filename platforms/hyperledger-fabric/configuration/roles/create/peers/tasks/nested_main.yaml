###########################################################################################
# Remove existing value file for peer
- name: Remove existing value file for { peer.name }}
  shell: |
    rm -f {{ values_dir }}/{{ item.name | lower }}/values-{{ peer.name }}.yaml

###########################################################################################
# Copy custom core.yaml for peer
- name: Copy custom config for fabric-ca server
  shell: |
    cp {{ peer.core_yaml.configpath }} ../../../{{ charts_dir }}/peernode/conf/{{ peer.name }}_{{ item.name | lower }}_core.yaml
  when: 
    - peer.core_yaml is defined
    - peer.core_yaml.initialize_from == 'file'
    - peer.core_yaml.configpath is defined
    - peer.core_yaml.tpl == true

############################################################################################
# This task fetches the custom core.yaml
- name: Fetch the custom core.yaml
  command: cat {{ peer.core_yaml.configpath }}
  register: core_yaml_file
  when: 
    - peer.core_yaml is defined
    - peer.core_yaml.initialize_from == 'file'
    - peer.core_yaml.configpath is defined
    - peer.core_yaml.tpl == false

###########################################################################################
# This task writes the couchdb credentials for each organization to the vault
- name: Write the couchdb credentials to Vault
  shell: |
    vault write {{ vault.secret_path | default('secret') }}/credentials/{{ namespace }}/couchdb/{{ item.name | lower}} user="admin123"
  environment:
    VAULT_ADDR: "{{ vault.url }}"
    VAULT_TOKEN: "{{ vault.root_token }}"
  tags:
    - molecule-idempotence-notest
  when: update_core_yaml is undefined or update_core_yaml == false

############################################################################################
# This task is the nested task for main.yaml which helps to iterate over all peers
- name: Create Value files for Organization Peers
  include_role:
    name: helm_component
  vars:
    name: "{{ item.name | lower }}"
    type: "value_peer"
    component_name: values-{{ peer.name }}
    couchdb_image: "{{ couchdb_image_version[network.version] }}"
    peer_image: "hyperledger/fabric-peer:{{ network.version }}"
    alpine_image: "{{ docker_url }}/alpine-utils:1.0"
    peer_name: "{{ peer.name }}"
    peer_ns: "{{ namespace }}"
    provider: "{{ network.env.proxy }}"
  loop: "{{ component_services.peers }}"
  loop_control:
    loop_var: peer 
  when: 
    - peer.peerstatus is not defined or peer.peerstatus == 'new' 
    - update_core_yaml is undefined or update_core_yaml == false 

#Git Push : Pushes the above generated files to git directory 
- name: Git Push
  include_role: 
    name: "{{ playbook_dir }}/../../shared/configuration/roles/git_push"
  vars:
    GIT_DIR: "{{ playbook_dir }}/../../../"
    GIT_REPO: "{{ item.gitops.git_repo }}"
    GIT_USERNAME: "{{ item.gitops.username }}"
    GIT_EMAIL: "{{ item.gitops.email }}"
    GIT_PASSWORD: "{{ item.gitops.password }}"
    GIT_BRANCH: "{{ item.gitops.branch }}"
    GIT_RESET_PATH: "platforms/hyperledger-fabric/configuration"
    msg: "[ci skip] Pushing Peer files"
  tags:
    - notest

# Wait for peer pods to be in the state of running
- name: "Waiting for peer pod {{ peer.name }} in {{ item.name | lower }}-net"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/helm_component"
  vars:
    component_type: "Pod"
    namespace: "{{ item.name | lower }}-net"
    component_name: "{{ peer.name }}"
    kubernetes: "{{ item.k8s }}"
    label_selectors:
      - app = {{ component_name }}
  loop: "{{ component_services.peers }}"
  loop_control:
    loop_var: peer 
  when: 
    - peer.peerstatus is not defined or peer.peerstatus == 'new'
    - update_core_yaml is undefined or update_core_yaml == false
  tags:
    - notest
