#############################################################################################
# This role creates the generate_crypto.sh script for orderers and organizations.
#############################################################################################

############################################################################################
# This task creates the build directory if it does not exist
- name: Create build directory if it does not exist
  file:
    path: "./build"
    state: directory

############################################################################################
# This task creates the generate_crypto.sh file for orderers
- name: Create generate_crypto script file for orderers
  template:
    src: "endorsement/orderer_script.tpl"
    dest: "./build/generate-crypto-{{ component_name }}-{{ peer_name }}.sh"
  vars:
    component_name: "{{ item.name | lower }}"
    component_ns: "{{ item.name | lower }}-net"
    component_country: "{{ item.country }}"
    component_subject: "{{ item.subject }}"
    component_state: "{{ item.state }}"
    component_location: "{{ item.location }}"
    ca_url: "{{ item.ca_data.url }}"
    peer_name: "{{ orderer.name }}"
    proxy: "{{ network.env.proxy }}"
  loop: "{{ orderers }}"
  loop_control:
    loop_var: orderer
  when: component_type == 'orderer'

############################################################################################
# This task creates the tls generate_crypto.sh file for orderers using fabric-ca
- name: Create tls generate_crypto script file for orderers using fabric-ca
  template:
    src: "tls/fabric-ca/orderer_script.tpl"
    dest: "./build/generate-crypto-{{ component_name }}-{{ peer_name }}-tls.sh"
  vars:
    component_name: "{{ item.name | lower }}"
    component_ns: "{{ item.name | lower }}-net"
    component_country: "{{ item.country }}"
    component_subject: "{{ item.subject }}"
    component_state: "{{ item.state }}"
    component_location: "{{ item.location }}"
    ca_url: "{{ item.ca_data.url }}"
    peer_name: "{{ orderer.name }}"
    proxy: "{{ network.env.proxy }}"
  loop: "{{ orderers }}"
  loop_control:
    loop_var: orderer
  when: component_type == 'orderer' and item.services.ca.tls_ca is undefined

  ############################################################################################
# This task creates the tls generate_crypto.sh file for orderers using cws-ca
- name: Create tls generate_crypto script file for orderers using cws-ca
  template:
    src: "tls/{{item.services.ca.tls_ca.type}}/orderer_script.tpl"
    dest: "./build/generate-crypto-{{ component_name }}-{{ peer_name }}-tls.sh"
  vars:
    component_name: "{{ item.name | lower }}"
    component_ns: "{{ item.name | lower }}-net"
    component_country: "{{ item.country }}"
    component_subject: "{{ item.subject }}"
    component_state: "{{ item.state }}"
    component_location: "{{ item.location }}"
    ca_url: "{{ item.ca_data.url }}"
    peer_name: "{{ orderer.name }}"
    proxy: "{{ network.env.proxy }}"
  loop: "{{ orderers }}"
  loop_control:
    loop_var: orderer
  when: component_type == 'orderer' and item.services.ca.tls_ca is defined

###########################################################################################
# This task creates the generate-crypto-{{ component_name }}.sh file for orderer organizations
- name: Create generate_crypto script file for orderer organisation
  template:
    src: "endorsement/orderer_organisation_script.tpl"
    dest: "./build/generate-crypto-{{ component_name }}.sh"
  vars:
    component_name: "{{ item.name | lower }}"
    component_ns: "{{ item.name | lower }}-net"
    component_subject: "{{ item.subject }}"
    component_country: "{{ item.country }}"
    component_state: "{{ item.state }}"
    component_location: "{{ item.location }}"
    ca_url: "{{ item.ca_data.url }}"
    proxy: "{{ network.env.proxy }}"
  when: component_type == 'orderer'

  # This task creates the generate-crypto-{{ component_name }}.sh file for orderer organizations using fabric-ca
- name: Create generate_crypto script file for orderer organisation using fabric-ca
  template:
    src: "tls/fabric-ca/orderer_organisation_script.tpl"
    dest: "./build/generate-crypto-{{ component_name }}-tls.sh"
  vars:
    component_name: "{{ item.name | lower }}"
    component_ns: "{{ item.name | lower }}-net"
    component_subject: "{{ item.subject }}"
    component_country: "{{ item.country }}"
    component_state: "{{ item.state }}"
    component_location: "{{ item.location }}"
    ca_url: "{{ item.ca_data.url }}"
    proxy: "{{ network.env.proxy }}"
  when: component_type == 'orderer' and item.services.ca.tls_ca is undefined

    # This task creates the generate-crypto-{{ component_name }}.sh file for orderer organizations using cws-ca
- name: Create generate_crypto script file for orderer organisation using cws-ca
  template:
    src: "tls/{{item.services.ca.tls_ca.type}}/orderer_organisation_script.tpl"
    dest: "./build/generate-crypto-{{ component_name }}-tls.sh"
  vars:
    component_name: "{{ item.name | lower }}"
    component_ns: "{{ item.name | lower }}-net"
    component_subject: "{{ item.subject }}"
    component_country: "{{ item.country }}"
    component_state: "{{ item.state }}"
    component_location: "{{ item.location }}"
    ca_url: "{{ item.ca_data.url }}"
    proxy: "{{ network.env.proxy }}"
  when: component_type == 'orderer' and item.services.ca.tls_ca is defined

############################################################################################
# This task creates the generate_crypto.sh file for organizations
- name: Create generate_crypto script file for organisations
  template:
    src: "endorsement/organisation_script.tpl"
    dest: "./build/generate-crypto-{{ component_name }}.sh"
  vars:
    component_name: "{{ item.name | lower }}"
    component_ns: "{{ item.name | lower }}-net"
    component_subject: "{{ item.subject }}"
    component_country: "{{ item.country }}"
    component_state: "{{ item.state }}"
    component_location: "{{ item.location }}"
    ca_url: "{{ item.ca_data.url }}"
    peer_count: "{{ item.services.peers | length }}"
    proxy: "{{ network.env.proxy }}"
  when: component_type == 'peer'

# This task creates the tls generate_crypto.sh file for organizations
- name: Create tls generate_crypto script file for organisations using fabric-ca
  template:
    src: "tls/fabric-ca/organisation_script.tpl"
    dest: "./build/generate-crypto-{{ component_name }}-tls.sh"
  vars:
    component_name: "{{ item.name | lower }}"
    component_ns: "{{ item.name | lower }}-net"
    component_subject: "{{ item.subject }}"
    component_country: "{{ item.country }}"
    component_state: "{{ item.state }}"
    component_location: "{{ item.location }}"
    ca_url: "{{ item.ca_data.url }}"
    peer_count: "{{ item.services.peers | length }}"
    proxy: "{{ network.env.proxy }}"
  when: component_type == 'peer' and item.services.ca.tls_ca is undefined

# This task creates the tls generate_crypto.sh file for organizations
- name: Create tls generate_crypto script file for organisations using cws-ca
  template:
    src: "tls/{{item.services.ca.tls_ca.type}}/organisation_script.tpl"
    dest: "./build/generate-crypto-{{ component_name }}-tls.sh"
  vars:
    component_name: "{{ item.name | lower }}"
    component_ns: "{{ item.name | lower }}-net"
    component_subject: "{{ item.subject }}"
    component_country: "{{ item.country }}"
    component_state: "{{ item.state }}"
    component_location: "{{ item.location }}"
    ca_url: "{{ item.ca_data.url }}"
    peer_count: "{{ item.services.peers | length }}"
    proxy: "{{ network.env.proxy }}"
  when: component_type == 'peer' and item.services.ca.tls_ca is defined
