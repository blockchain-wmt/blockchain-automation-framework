# This playbook deploys a DLT network on existing Kubernetes clusters
# The Kubernetes clusters should already be created and the infomation to connect to the
#  clusters be updated in the network.yaml file that is used as an input to this playbook
###########################################################################################
# To Run this playbook from this directory, use the following command (network.yaml also in this directory)
#  ansible-playbook deploy-network.yaml -e "@./network.yaml"
############################################################################################
# Please ensure that the ../../shared/configuration playbooks have been run using the same network.yaml
---
  # This will apply to ansible_provisioners. /etc/ansible/hosts should be configured with this group
- hosts: ansible_provisioners
  gather_facts: no
  tasks:

    # delete peer crypto directory
    - name: Remove build directory
      file:
        path: "./build/crypto-config/peerOrganizations/{{ component_name }}/peers"
        state: absent
      vars:
        component_name: "{{ item.name | lower}}-net"
      loop: "{{ network['organizations'] }}"

    # delete peer admin crypto directory
    - name: Remove build directory
      file:
        path: "./build/crypto-config/peerOrganizations/{{ component_name }}/users/Admin@{{ component_name }}"
        state: absent
      vars:
        component_name: "{{ item.name | lower}}-net"
      loop: "{{ network['organizations'] }}"

    # Create generate_crypto script for each organization
    - name: Create generate_crypto.sh for each organization
      include_role:
        name: "create/crypto_script"
      vars:
        component_type: "{{ item.type | lower}}"
        orderers: "{{ item.services.orderers }}"
      loop: "{{ network['organizations'] }}"
    
    # Create Organization crypto materials
    - name: Create crypto materials for each peer
      include_role:
        name: "create/crypto/peer"
      vars:
        component_name: "{{ item.name | lower}}-net"
        component_type: "{{ item.type | lower}}"
        org_name: "{{ item.name }}"
        services: "{{ item.services }}"
        subject: "{{ item.subject }}"
        cert_subject: "{{ item.subject | regex_replace('/', ';') | regex_replace(',', '/') | regex_replace(';', ',') }}" # replace , to / and / to , for certpath
        kubernetes: "{{ item.k8s }}"
        vault: "{{ item.vault }}"
      loop: "{{ network['organizations'] }}"
      when: item.type == 'peer'

  vars: #These variables can be overriden from the command line
    privilege_escalate: false           #Default to NOT escalate to root privledges
    install_os: "linux"                 #Default to linux OS
    install_arch:  "amd64"              #Default to amd64 architecture
    bin_install_dir:  "~/bin"            #Default to /bin install directory for binaries
    add_new_org: 'false'                # Default to false as this is for main network creation
    refresh_cert: true