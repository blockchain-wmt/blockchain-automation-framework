apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $.Values.orderer.name }}-config
  namespace: {{ $.Values.metadata.namespace }}
  labels:
    app.kubernetes.io/name: {{ $.Values.orderer.name }}-config
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- include "labels.custom" . | trim | nindent 4 }}
data:
  FABRIC_LOGGING_SPEC: {{ $.Values.orderer.loglevel }}
  ORDERER_GENERAL_GENESISMETHOD: file
  ORDERER_GENERAL_GENESISFILE: /var/hyperledger/orderer/orderer.genesis.block
  GODEBUG: "netdns=go"
  {{ if eq $.Values.orderer.orderer_yaml.initialize_from "global_var" }}
  ORDERER_GENERAL_LISTENADDRESS: 0.0.0.0
  ORDERER_GENERAL_LOCALMSPID: {{ $.Values.orderer.localmspid }}
  ORDERER_GENERAL_KEEPALIVE_SERVERINTERVAL: {{ $.Values.orderer.keepaliveserverinterval }}
  ORDERER_GENERAL_LOCALMSPDIR: /var/hyperledger/orderer/crypto/msp
  ORDERER_GENERAL_TLS_ENABLED: "{{ $.Values.orderer.tlsstatus }}"
  ORDERER_GENERAL_TLS_PRIVATEKEY: /var/hyperledger/orderer/crypto/tls/server.key
  ORDERER_GENERAL_TLS_CERTIFICATE: /var/hyperledger/orderer/crypto/tls/server.crt
  ORDERER_GENERAL_TLS_ROOTCAS: '[/var/hyperledger/orderer/crypto/tls/ca.crt]'
  ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE: /var/hyperledger/orderer/crypto/tls/server.crt
  ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY: /var/hyperledger/orderer/crypto/tls/server.key
  ORDERER_GENERAL_CLUSTER_ROOTCAS: '[/var/hyperledger/orderer/crypto/tls/ca.crt]'
  ORDERER_KAFKA_RETRY_SHORTINTERVAL: "1s"
  ORDERER_KAFKA_RETRY_SHORTTOTAL: "30s"
  ORDERER_KAFKA_VERBOSE: "true"
  {{ end }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: genesis-block-{{ $.Values.orderer.name }}
  namespace: {{ $.Values.metadata.namespace }}
  labels:
    app.kubernetes.io/name: genesis-block
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- include "labels.custom" . | trim | nindent 4 }}
data:
  genesis.block.base64: {{ .Values.genesis | quote }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $.Values.orderer.name }}-orderer-yaml-config
  namespace: {{ $.Values.metadata.namespace }}
  labels:
    app.kubernetes.io/name: {{ $.Values.orderer.name }}-orderer-yaml-config
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- include "labels.custom" . | trim | nindent 4 }}
data:
  {{ if and (eq $.Values.orderer.orderer_yaml.initialize_from "file") (eq $.Values.orderer.orderer_yaml.tpl true) }}
  orderer.yaml: |
    {{ (tpl (.Files.Get ( printf "%s" $.Values.orderer.orderer_yaml.configpath )) . ) | nindent 6 }}
  {{ end }}
  {{ if and (eq $.Values.orderer.orderer_yaml.initialize_from "file") (eq $.Values.orderer.orderer_yaml.tpl false) }}
  B64_ORDERER_YAML: "{{ $.Values.orderer.orderer_yaml.base64 }}"
  {{ end }}
